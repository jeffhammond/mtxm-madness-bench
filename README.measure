MADNESS CORAL BENCHMARKS

Two tests in the form of three binaries:

1. MTXM is the FP-intensive kernel and measures single-threaded performance 
   of small matrix multiple.  This kernel can be run on multiple MPI procs 
   at the same time where this is appropriate to capture the full measure of
   FP performance.

2. REDUCE and AXPY are tests of the task queue.  They run with one process 
   and any number of threads using either the native MADNESS threaded 
   runtime and task queue or using TBB (Threading Building Blocks).  The 
   TBB implementation is better than the MADNESS one and will run faster
   on platforms where it is available (ALCF has ported to PowerPC systems)
   and obviously it is available for x86.

Please provide performance data for 1 for single-threaded execution and
when using all threads on the node.  Please feel free to provide additional
data if you believe that these two measurements do not accurately represent
the FP performance of your system.

Please provide performance data for 2 using all the threads on the node.
If using all the threads is not optimal for these tests, please provide
additional data for the number of threads that is optimal.  In this case,
you must also provide the rests of test 1 running on that number of 
hardware threads (as MPI processes) so that it can be determined if
the threaded tests saturate prior to using a number of threads sufficient
to saturate the peak FP performance of the node.

RUNNING THE TESTS

Please execute the commands using the following or equivalent if running 
on a hosted system:
./axpy.x > axpy.log
./reduce.x > reduce.log
./test_mtxmq.x > mtxmq.log
./test_Zmtxmq.x > Zmtxmq.log

Please provide the logs without modification.

If you use different parameters for tests, please document these and 
provide results for each test using all parameter sets.  Please 
denote the logs appropriately and provide a README if necessary.
